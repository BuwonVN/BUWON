@using BWERP.Models.WeelkyReport;
@using System.Globalization;
<div class="col-12 mt-2">
	<div class="row mb-2">
		<div class="app-card app-card-basic d-flex flex-column align-items-start shadow-sm">
			<div class="app-card-header p-3 border-bottom-0">
				<div class="row align-items-center gx-3">
					<div class="col-auto">
						<div class="app-icon-holder">
							<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-receipt" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
								<path fill-rule="evenodd" d="M1.92.506a.5.5 0 0 1 .434.14L3 1.293l.646-.647a.5.5 0 0 1 .708 0L5 1.293l.646-.647a.5.5 0 0 1 .708 0L7 1.293l.646-.647a.5.5 0 0 1 .708 0L9 1.293l.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .801.13l.5 1A.5.5 0 0 1 15 2v12a.5.5 0 0 1-.053.224l-.5 1a.5.5 0 0 1-.8.13L13 14.707l-.646.647a.5.5 0 0 1-.708 0L11 14.707l-.646.647a.5.5 0 0 1-.708 0L9 14.707l-.646.647a.5.5 0 0 1-.708 0L7 14.707l-.646.647a.5.5 0 0 1-.708 0L5 14.707l-.646.647a.5.5 0 0 1-.708 0L3 14.707l-.646.647a.5.5 0 0 1-.801-.13l-.5-1A.5.5 0 0 1 1 14V2a.5.5 0 0 1 .053-.224l.5-1a.5.5 0 0 1 .367-.27zm.217 1.338L2 2.118v11.764l.137.274.51-.51a.5.5 0 0 1 .707 0l.646.647.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.646.646.646-.646a.5.5 0 0 1 .708 0l.509.509.137-.274V2.118l-.137-.274-.51.51a.5.5 0 0 1-.707 0L12 1.707l-.646.647a.5.5 0 0 1-.708 0L10 1.707l-.646.647a.5.5 0 0 1-.708 0L8 1.707l-.646.647a.5.5 0 0 1-.708 0L6 1.707l-.646.647a.5.5 0 0 1-.708 0L4 1.707l-.646.647a.5.5 0 0 1-.708 0l-.509-.51z" />
								<path fill-rule="evenodd" d="M3 4.5a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 1 1 0 1h-6a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1-.5-.5zm8-6a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5zm0 2a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 0 1h-1a.5.5 0 0 1-.5-.5z" />
							</svg>
						</div><!--//icon-holder-->
					</div><!--//col-->
					<div class="col-auto">
						<h4 class="app-card-title">Search</h4>
					</div><!--//col-->
				</div><!--//row-->
			</div><!--//app-card-header-->
			<EditForm EditContext="editContext" OnSubmit="@HandleSubmit" style="width:100%">
				<div class="app-card-body px-4">
					<div class="intro">
						<div class="mb-3 row">
							<label for="staticEmail" class="col-auto col-form-label">Year</label>
							<div class="col-auto">
								<InputSelect class="form-select" @bind-Value="@searchModel.Year">
									@foreach (var year in years)
									{
										<option value="@year">@year</option>
									}
								</InputSelect>
							</div>
							<label for="inputPassword" class="col-auto col-form-label">Month</label>
							<div class="col-auto">
								<InputSelect class="form-select" @bind-Value="@searchModel.Month">
									@foreach (var month in months)
									{
										<option value="@month.Key">@month.Value</option>
									}
								</InputSelect>
							</div>
							<div class="col-1">
								<button type="submit" class="btn app-btn-secondary">Search</button>
							</div>
						</div>
					</div>
				</div><!--//app-card-body-->
			</EditForm>
		</div><!--//app-card-->
	</div>
</div>

@code {
	[Parameter]
	public EventCallback<EditContext> OnSubmit { get; set; }
	private List<int> years = new List<int>();
	private Dictionary<int, string> months = new Dictionary<int, string>();

	private EditContext editContext;
	private SearchModel searchModel = new SearchModel();

	protected override void OnInitialized()
	{
		editContext = new EditContext(searchModel);
		// Populate years
		int startYear = 2000;
		int endYear = DateTime.Now.Year;

		for (int year = startYear; year <= endYear; year++)
		{
			years.Add(year);
		}

		// Populate months
		for (int month = 1; month <= 12; month++)
		{
			months.Add(month, DateTimeFormatInfo.CurrentInfo.GetMonthName(month));
		}

		// Initialize default selections
		searchModel.Year = DateTime.Now.Year;
		searchModel.Month = DateTime.Now.Month;
	}

	private async Task HandleSubmit()
	{
		if (OnSubmit.HasDelegate)
		{
			await OnSubmit.InvokeAsync(editContext);
		}
	}
	public class SearchModel
	{
		public int Year { get; set; }
		public int Month { get; set; }
	}
}
